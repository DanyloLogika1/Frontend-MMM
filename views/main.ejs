<!DOCTYPE html>
<head>
    <link rel="stylesheet" href="../css/main.css">
    <link rel="stylesheet" href="https://use.typekit.net/juw2amj.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap" rel="stylesheet">
    <script src="https://kit.fontawesome.com/867a828ed9.js" crossorigin="anonymous"></script>
    <meta charset="utf-8">
    <script type="text/javascript" src="https://cdn.socket.io/4.7.5/socket.io.min.js"></script>
    <title>Kaktus</title>
    
</head>
<body style="display: flex;flex-direction: column;">
    <nav class="topbar" style="height:4%;display: flex;">
        <text>Kaktus</text>
        
    </nav>
    <div class="centerarea" style="height:86%;display:flex;flex-direction: row;">
        <div id="createchat" style="position:fixed;background-color: transparent;width:100%;height:100%;display: none;justify-content: center;align-items: center;pointer-events: none !important;">
        
        <div class="createchat inter" style="border-radius: 3px;border: 2px solid #fff;color:#fff;background-color: #1F0D2E;;width: 10%;height: 10%;text-align: center;padding:1vh;pointer-events: all;"><txt onclick="createChat()" style="cursor: pointer !important;">Створити чат</txt>
        <form>
            <br>
            <input id="receiver" name="receiver" style="width: 100%;text-decoration: none;outline: none;border:none;background-color: #F0DE54;padding: 0.5vh;border-radius: 3px;" maxlength="9" placeholder="Ключ отримувача">


        </form>
        </div>
        </div>

        <div style="position:fixed;background-color: transparent;width:100%;height:100%;display: none;justify-content: center;align-items: center;pointer-events: none !important;">
        
            <div class="createchat inter" style="border-radius: 3px;border: 2px solid #fff;color:#fff;background-color: #1F0D2E;;width: 10%;height: 10%;text-align: center;padding:1vh;pointer-events: all;">Створити чат
            <form>
                <br>
                <input id="receiver" name="receiver" style="width: 100%;text-decoration: none;outline: none;border:none;background-color: #F0DE54;padding: 0.5vh;border-radius: 3px;" maxlength="9" placeholder="Ключ отримувача">
    
    
            </form>
            </div>
            </div>

    <!-- ** This area is dynamic -->
    <div class="channels inter" style="width:5%;display: flex;flex-direction: column;">
    
        <%- userData.channels %>
    
    
    </div>
    <div style="display: flex;flex-direction: column;width: 15%;">
    <div class="chats inter" style="display: flex;flex-direction: column;gap: 3%;height: 95%;">
        <form method="POST" action="/openchat/chatID" id="chatform" style="display: none;"><input name="chatID" id="chatID" readonly><input name="newmessage" id="newmessage" readonly></form>

        
        <%- userData.chats %>
        
    </div>
    <div style="height: 5%;display:flex;flex-direction: row-reverse;gap:5%;background-color: #1F3045;">
        <circle style="color:#000;background-color: #F0DE54; width:4vh;height: 4vh;border-radius: 50%;margin-right: 5%;display:flex;justify-content: center;align-items: center;cursor: pointer !important;"><i id="cr-chat" class="fas fa-1x fa-comment-alt" style="color:#000"></i></circle>
        <circle style="color:#000;background-color: #F0DE54; width:4vh;height: 4vh;border-radius: 50%;display:flex;justify-content: center;align-items: center;cursor: pointer !important;"><i id='cr-group' class="fas fa-1x fa-quote-right" style="color:#000"></i></circle>
    
    </div>
</div>
        <!-- SECTION MessageArea -->
    <div class="messagearea inter" style="width:80%;display: flex;flex-direction: column;">
        <div style="display: flex;flex-direction: row;height: 5%;">
            <input name="srch-sel" id="searchselector" class="inter" placeholder=":main" style="width:5%;text-align: center;" readonly>
            <input class="searchbar inter" style="width:20%; background-color: #F0DE54;margin-left:2%" placeholder="Пошук в <%- userData.branch -%>">
        </div>
        <div id="message-container" class="inter" style="height: 88%;padding-top: 2vh;padding-bottom: 2vh;display: flex;flex-direction: column;">
            
        <%- userData.messages %>
        
        
        </div>
        <input id="messagebar" class="messagebar inter" style="height: 7%;"  placeholder="Написати у <%- userData.branch -%>" autofocus>
    
    </div>

    </div>

    <div class="bottomarea" style="height:10%;display:flex">
        <pfp style="width:5%;"></pfp>

        <div class="pf-info" style="width: 15%;">
            <fieldset style="outline: none;border-color: transparent;display:flex;flex-direction: column;padding-top:1vh;padding-left:1vw">
                <field class="username-tag-level inter"><us><%= userData.username %></us><n>&nbsp;&nbsp;</n><tg class="inter" style="font-size:60%;color:lightgray"><%= userData.tag %></tg><n>&nbsp;</n><lvl></lvl></field>
                <field class="lib inter" style="font-size: 60%;color:lightgreen">в мережі</field>
                <field class="level inter" style="font-size: 60%;color:bisque">Авантюрист [1]</field>
            </fieldset>
        </div>

        <div class="app-bar" style="width: 80%;display: flex;align-items: center;padding-left:1vw;">
            <div class="new-app" style="border: 2px solid #fff;border-radius: 50%;width:6vh;height: 6vh;cursor:pointer !important;display: flex;align-items: center;justify-content: center;"><b>+</b></div>
        </div>
    </div>

    
    
</body>

<script>
function fromHTML(html, trim = true) {
  // Process the HTML string.
  html = trim ? html.trim() : html;
  if (!html) return null;

  // Then set up a new template element.
  const template = document.createElement('template');
  template.innerHTML = html;
  const result = template.content.children;

  // Then return either an HTMLElement or HTMLCollection,
  // based on whether the input HTML had one or more roots.
  if (result.length === 1) return result[0];
  return result;
}


document.getElementById('message-container').lastElementChild != null ? document.getElementById('message-container').lastElementChild.scrollIntoView() : {};
let chatForm = document.getElementById('chatform');
let chatid = document.getElementById('chatID');
let tag = document.querySelector('tg').innerHTML;

function connectChat(id) {
    chatForm.action = `/openchat/${id}`;
    chatid.value = id;
    chatForm.submit()
}

function connectChannel(id) {
    chatForm.action = `/openchannel/${id}`;
    chatid.value = id;
    chatForm.submit();
}

// >> Keystroke
let newmessage = document.getElementById('newmessage')
const socket = io();

function handleShortcut(event) {
    if (event.key === "Enter") {
        event.preventDefault();
        let currentUrlsbs = window.location.href.substring(window.location.href.lastIndexOf('/') + 1);
        if (currentUrlsbs != 'main' && currentUrlsbs != 'settings') {
            let specifier = window.location.href.substring(0, window.location.href.lastIndexOf('/'))
            specifier.substring(specifier.lastIndexOf('/') + 1)
            switch (specifier.substring(specifier.lastIndexOf('/') + 1)) 
            {
                case 'openchat':
                    newmessage.value = document.getElementById('messagebar').value.replace('/"/g', '\\"')
                    connectChat(currentUrlsbs)
                    socket.emit('newmessage', newmessage.value, tag )
                    newmessage.value = '';
                    break;

                case 'openchannel':
                    newmessage.value = document.getElementById('messagebar').value.replace('/"/g', '\\"')
                    connectChannel(currentUrlsbs)
                    socket.emit('newmessage', newmessage.value, tag )
                    newmessage.value = '';
                    break;
                
                default: {break;}
            }
            console.log(document.getElementById('messagebar').value.replace('/"/g', '\\"'))
            
            
        }
    }

    // else if (event.key === "Tab") {
    //     event.preventDefault()
    //     document.getElementById('messagebar').value += '&#13;&#10;'
    //     console.log(document.getElementById('messagebar').value)
    // }

    
}
document.addEventListener("keydown", handleShortcut);

socket.on('interconnect', (value, tag) => {
    var msg = document.getElementById('message-container').appendChild(fromHTML(`<msg class="inter"><i>${tag}: &nbsp;</i>${value}</msg>`))
    document.getElementById('message-container').lastElementChild != null ? document.getElementById('message-container').lastElementChild.scrollIntoView() : {};
})

document.getElementById('cr-chat').addEventListener('click', showhidechat)
   

function createChat() {
    let receiver = document.getElementById('receiver').value;
    receiver == '' ? {} : socket.emit('newchat', receiver)
}

function showhidechat() {
    let form = document.getElementById('createchat')
    console.log(form.style.display)
    if (form.style.display == 'none') {
        form.style.display = 'flex'
    }
    else form.style.display = 'none'
}

</script>